/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-14 00:06:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.wsp.notice.model.vo.Notice;
import java.util.List;
import com.kh.wsp.member.model.vo.Member;

public final class noticeList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/notice/../common/footer.jsp", Long.valueOf(1593739159275L));
    _jspx_dependants.put("/WEB-INF/views/notice/../common/header.jsp", Long.valueOf(1594684896043L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.kh.wsp.notice.model.vo.Notice");
    _jspx_imports_classes.add("com.kh.wsp.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");

	List<Notice> list = (List<Notice>)request.getAttribute("list");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>공지사항</title>\r\n");
      out.write("    <style>\r\n");
      out.write("    \t.pagination {\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("        #searchForm{\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #searchForm>*{\r\n");
      out.write("            top : 0;\r\n");
      out.write("        }\r\n");
      out.write("\t</style>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");

	// Session에 저장되어 있는 login 정보를 가져와 loginMember 변수에 저장
	Member loginMember = (Member)session.getAttribute("loginMember");

	// 쿠키에 저장된 saveId 꺼내오기
	boolean isSave = false; // 아이디 저장 체크박스 값을 수정하기 위한 변수
	String saveId = ""; // 쿠키에 저장된 아이디를 저장할 변수
	Cookie[] cookies = request.getCookies(); // 요청 주소와 관련된 쿠키를 모두 얻어옴.
	
	// 쿠키에 저장된 아이디 검출
	if(cookies != null){
		for(Cookie c : cookies){
			
			if("saveId".equals(c.getName())){ // 얻어온 쿠키의 이름(key)이 "saveId"와 같은 쿠키를 찾음
				saveId = c.getValue(); // saveId 변수에 쿠키에 저장된 value를 저장
				isSave = true;
			}
		}
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("  <title>WebServer Project</title>\r\n");
      out.write("  \r\n");
      out.write("  <!-- Bootstrap core CSS -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("\t<style>\r\n");
      out.write("\t     body {\r\n");
      out.write("\t       padding-top: 56px;\r\n");
      out.write("\t     }\r\n");
      out.write("\t     \r\n");
      out.write("\t </style>\r\n");
      out.write("\t \r\n");
      out.write("\t<!-- sweetalert : alert창을 꾸밀 수 있게 해주는 라이브러리 https://sweetalert.js.org/ -->\r\n");
      out.write("  <script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("  <script>\r\n");
      out.write("  \r\n");
      out.write("  /***** 이전 페이지에서 전달받은 내용을 alert 창으로 표시하기 *****/\r\n");
      out.write("  ");

 	 String status = (String)(request.getSession().getAttribute("status"));
 	 String msg = (String)(request.getSession().getAttribute("msg"));
 	 String text = (String)(request.getSession().getAttribute("text"));
  
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  ");
 if(msg != null){
      out.write("\r\n");
      out.write("\t\t \t swal({\r\n");
      out.write("\t\t \t\t icon : \"");
      out.print(status);
      out.write("\", \r\n");
      out.write("\t\t \t\t title : \"");
      out.print(msg);
      out.write("\",\r\n");
      out.write("\t\t \t\t text : \"");
      out.print(text != null ? text : "" );
      out.write("\" \r\n");
      out.write("\t\t \t });\r\n");
      out.write(" \t ");

 	 		// Session에 존재하는 특정 키값의 속성 제거
 	 		session.removeAttribute("msg");
 	 		session.removeAttribute("status");
 	 		session.removeAttribute("text");
  	}
 	 
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Navigation으로 된 header -->\r\n");
      out.write("\t<div class=\"header navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("\">WebServer Project</a>\r\n");
      out.write("\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n");
      out.write("\t\t\t\t<ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/notice/list.do\">Notice</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/noticeExercise/noticeList.do\">Notice(exercise)</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"#\">Board</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  <li class=\"nav-item\">\r\n");
      out.write("\t\t\t\t    <a class=\"nav-link\" href=\"#\">Board(exercise)</a>\r\n");
      out.write("\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t  ");
      out.write("\r\n");
      out.write("\t\t\t\t  ");
 if(loginMember == null){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t  <li class=\"nav-item active\">\r\n");
      out.write("\t\t\t\t\t    <a class=\"nav-link\" data-toggle=\"modal\" href=\"#modal-container-1\">Login</a>\r\n");
      out.write("\t\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  ");
 }else{ 
      out.write("\r\n");
      out.write("\t\t\t\t  \t <li class=\"nav-item active\">\r\n");
      out.write("\t\t\t\t\t    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/myPage.do\">");
      out.print(loginMember.getMemberName());
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t\t  <li class=\"nav-item active\">\r\n");
      out.write("\t\t\t\t\t    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout.do\">Logout</a>\r\n");
      out.write("\t\t\t\t\t  </li>\r\n");
      out.write("\t\t\t\t  ");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\t<div class=\"modal fade\" id=\"modal-container-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t<h5 class=\"modal-title\" id=\"myModalLabel\">로그인 모달창</h5>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t\t<span aria-hidden=\"true\">×</span>\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">                  <!-- ﻿request.getContextPath() : 요청 주소 중 최상위 주소(/wsp)를 얻어옴 -->\r\n");
      out.write("\t\t\t\t\t<form class=\"form-signin\" method=\"POST\" action=\"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"\r\n");
      out.write("\t\t\t\t\t\tonsubmit=\"return loginValidate();\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"memberId\" name=\"memberId\" placeholder=\"아이디\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print( saveId);
      out.write("\"> <br>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"memberPwd\" name=\"memberPwd\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"비밀번호\"> <br>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"checkbox mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<label> \r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"saveId\" ");
      out.print( isSave ? "checked" : "" );
      out.write("> 아이디 저장\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">로그인</button>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"btn btn-lg btn-secondary btn-block\" \r\n");
      out.write("\t\t\t\t\t\t\t href=\"");
      out.print(request.getContextPath());
      out.write("/member/signUpForm.do\">회원가입</a>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("\t\t\t\t\t\tdata-dismiss=\"modal\">Close</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// 로그인 유효성 검사\r\n");
      out.write("\t\t// -> 아이디, 비밀번호 중 하나라도 입력되지 않으면 form 태그 기본 이벤트를 제거한다. \r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction loginValidate() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#memberId\").val().trim() == \"\"){\r\n");
      out.write("\t\t\t\talert(\"아이디를 입력해 주세요.\");\r\n");
      out.write("\t\t\t\t$(\"#memberId\").focus();\r\n");
      out.write("\t\t\t\treturn false; // 기본 이벤트 제거\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#memberPwd\").val().trim() == \"\"){\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력해 주세요.\");\r\n");
      out.write("\t\t\t\t$(\"#memberPwd\").focus();\r\n");
      out.write("\t\t\t\treturn false; // 기본 이벤트 제거\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn true;\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Bootstrap core JS -->\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("    <div class=\"my-5\">\r\n");
      out.write("    \t<h1>공지사항</h1>\r\n");
      out.write("      \t<table class=\"table table-hover table-striped my-5\" id=\"list-table\">\r\n");
      out.write("          <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>글번호 </th>\r\n");
      out.write("                <th>제목</th>\r\n");
      out.write("                <th>작성자</th>\r\n");
      out.write("                <th>조회수</th>\r\n");
      out.write("                <th>작성일</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("           </thead>\r\n");
      out.write("            \r\n");
      out.write("\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t<!-- \r\n");
      out.write("\t\t\t\t\t\t공지사항 글이 존재하지 않을 수도 있다.  \r\n");
      out.write("\t\t\t\t\t\tlist는 DAO에서 무조건 생성되어 반환이 된다.\r\n");
      out.write("\t\t\t\t\t\t일치하는 조건의 데이터가 없으면 [], 있으면 내용을 포함하여 반환한다.\r\n");
      out.write("\t\t\t\t\t\t따라서 null이냐 아니냐의 조건이 아니라 비었는지 안비었는지의 조건으로 해야한다.\t\t\t\r\n");
      out.write("\t\t\t\t\t\t-->\r\n");
      out.write("\t\t\t\t\t\t");
 if(list.isEmpty()){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td colspan=\"5\">존재하는 공지사항이 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");
 }else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
 for(Notice notice : list){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(notice.getNoticeNo());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(notice.getNoticeTitle());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(notice.getMemberId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(notice.getReadCount());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(notice.getNoticeModifyDate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("          </table>\r\n");
      out.write("       </div>\r\n");
      out.write("       ");
      out.write("\r\n");
      out.write("       ");
 if(loginMember != null && loginMember.getMemberGrade().equals("A")) { 
      out.write("\r\n");
      out.write("\t\t\t       <button type=\"button\" class=\"btn btn-primary float-right\" id=\"insertBtn\" \r\n");
      out.write("\t\t\t       \t\t\t\t onclick=\"location.href = 'insertForm.do';\">글쓰기</button>\r\n");
      out.write("\t\t\t ");
 } 
      out.write("\r\n");
      out.write("       <div class=\"my-5\" style=\"clear: both;\">\r\n");
      out.write("           <ul class=\"pagination\">\r\n");
      out.write("               <li>\r\n");
      out.write("                   <a class=\"page-link\" href=\"#\">&lt;</a>\r\n");
      out.write("               </li>\r\n");
      out.write("               <li>\r\n");
      out.write("                   <a class=\"page-link\" href=\"#\">1</a>\r\n");
      out.write("               </li>\r\n");
      out.write("               <li>\r\n");
      out.write("                   <a class=\"page-link\" href=\"#\">2</a>\r\n");
      out.write("               </li>\r\n");
      out.write("               <li>\r\n");
      out.write("                   <a class=\"page-link\" href=\"#\">3</a>\r\n");
      out.write("               </li>\r\n");
      out.write("               <li>\r\n");
      out.write("                   <a class=\"page-link\" href=\"#\">4</a>\r\n");
      out.write("               </li>\r\n");
      out.write("               <li>\r\n");
      out.write("                   <a class=\"page-link\" href=\"#\">5</a>\r\n");
      out.write("               </li>\r\n");
      out.write("               <li>\r\n");
      out.write("                   <a class=\"page-link\" href=\"#\">&gt;</a>\r\n");
      out.write("               </li>\r\n");
      out.write("           </ul>\r\n");
      out.write("       </div>\r\n");
      out.write("       \r\n");
      out.write("       <div class=\"mb-5\">\r\n");
      out.write("          <form action=\"search\" method=\"GET\" class=\"text-center\" id=\"searchForm\">\r\n");
      out.write("              <select name=\"searchKey\" class=\"form-control\" style=\"width:100px; display: inline-block;\">\r\n");
      out.write("                  <!-- <option value=\"title\" selected>글제목</option> -->\r\n");
      out.write("                  <option value=\"title\">글제목</option>\r\n");
      out.write("                  <option value=\"content\">내용</option>\r\n");
      out.write("                  <option value=\"titcont\">제목+내용</option>\r\n");
      out.write("              </select>\r\n");
      out.write("              <input type=\"text\" name=\"searchValue\" class=\"form-control\" style=\"width:25%; display: inline-block;\">\r\n");
      out.write("              <button class=\"form-control btn btn-primary\" style=\"width:100px; display: inline-block;\">검색</button>\r\n");
      out.write("          </form>\r\n");
      out.write("       </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- Footer -->\r\n");
      out.write("\t<div class=\"py-5 bg-dark footer\">\r\n");
      out.write("\t  <div class=\"container\">\r\n");
      out.write("\t    <p class=\"m-0 text-center text-white\">Copyright &copy; KH Information Educational Institute A-Class</p>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// 공지사항 상세보기 기능 (jquery를 통해 작업)\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$(\"#list-table td\").click(function(){\r\n");
      out.write("\t\t\t  var noticeNo = $(this).parent().children().eq(0).text();\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  // 쿼리스트링을 이용하여 get 방식으로 글번호를 전달\r\n");
      out.write("\t\t\t  location.href = \"");
      out.print(request.getContextPath());
      out.write("/notice/view.do?no=\" + noticeNo;\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t}).mouseenter(function(){\r\n");
      out.write("\t\t\t\t$(this).parent().css(\"cursor\", \"pointer\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
