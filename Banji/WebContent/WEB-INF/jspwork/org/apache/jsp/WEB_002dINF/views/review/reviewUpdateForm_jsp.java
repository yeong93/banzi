/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-08-05 07:25:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.banzi.review.model.vo.Attachment;
import java.util.ArrayList;
import com.kh.banzi.review.model.vo.Review;
import com.kh.banzi.user.model.vo.User;

public final class reviewUpdateForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/review/../common/header.jsp", Long.valueOf(1596610595358L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.banzi.review.model.vo.Attachment");
    _jspx_imports_classes.add("com.kh.banzi.user.model.vo.User");
    _jspx_imports_classes.add("com.kh.banzi.review.model.vo.Review");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Review review = (Review)request.getAttribute("review");
	ArrayList<Attachment> fList = (ArrayList<Attachment>)request.getAttribute("fList");
	String type = request.getParameter("type"); 
	String cp = request.getParameter("cp");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"//code.jquery.com/jquery.min.js\"></script>\r\n");
      out.write("<link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("<!-- 별점용 -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/js/all.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t@font-face {\r\n");
      out.write("\t\tfont-family: \"InfinitySans-RegularA1\";\r\n");
      out.write("\t\tsrc:\r\n");
      out.write("\t\t\turl(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@2.1/InfinitySans-RegularA1.woff\")\r\n");
      out.write("\t\t\tformat(\"woff\");\r\n");
      out.write("\t\tfont-weight: normal;\r\n");
      out.write("\t\tfont-style: normal;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@font-face {\r\n");
      out.write("\t\tfont-family: 'GmarketSansMedium';\r\n");
      out.write("\t\tsrc:\r\n");
      out.write("\t\t\turl('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff')\r\n");
      out.write("\t\t\tformat('woff');\r\n");
      out.write("\t\tfont-weight: normal;\r\n");
      out.write("\t\tfont-style: normal;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.empty {\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t\theight: 200px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tfont-family: \"InfinitySans-RegularA1\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.btn, #btn2 {\r\n");
      out.write("\t\tbackground-color: #ffce54;\r\n");
      out.write("\t\tborder: none;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.empty {\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t\theight: 220px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.container {max-width: 720px;}\r\n");
      out.write("\t\r\n");
      out.write("\th3 {font-family: 'GmarketSansMedium';}\r\n");
      out.write("\t\r\n");
      out.write("\t/* 이미지 업로드 부분*/\r\n");
      out.write("\t.boardImg { cursor: pointer; }\r\n");
      out.write("</style>\r\n");
      out.write("<title>글쓰기폼</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write('\n');
      out.write('\n');
	
	User loginUser = (User)session.getAttribute("loginUser");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("  <meta charset=\"UTF-8\" />\n");
      out.write("\n");
      out.write("  <!-- Required meta tags -->\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n");
      out.write("  <!-- Bootstrap CSS -->\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n");
      out.write("    integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\" />\n");
      out.write("  <!-- jQuery -->\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- CSS -->\n");
      out.write("   <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/resources/css/style.css\">\n");
      out.write("\n");
      out.write("  <title>BAN JI</title>\n");
      out.write("  <style>\n");
      out.write("  \n");
      out.write("/* -------------- body -------------- */\n");
      out.write("\n");
      out.write("* {\n");
      out.write("/* border: 1px solid black; */\n");
      out.write("margin: 0;\n");
      out.write("padding: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row>div {\n");
      out.write("width: 100%;\n");
      out.write("height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* -------------- header -------------- */\n");
      out.write("header{\n");
      out.write("position: fixed;\n");
      out.write("height : 157px;\n");
      out.write("width: 100%;\n");
      out.write("z-index : 100;\n");
      out.write("background-color : white;\n");
      out.write("top : 0px;\n");
      out.write("}\n");
      out.write("#main-logo{\n");
      out.write("padding: 11px;\n");
      out.write("}\n");
      out.write("#header button {\n");
      out.write("float: right;\n");
      out.write("margin: 1em;\n");
      out.write("width: 6em;\n");
      out.write("height: 2em;\n");
      out.write("border: 1px solid lightgray;\n");
      out.write("font-family: \"InfinitySans-RegularA1\";\n");
      out.write("font-size: 0.7em;\n");
      out.write("color: lightgray;\n");
      out.write("background-color: transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("/* -------------- nav -------------- */\n");
      out.write(".dropdown:hover .dropdown-menu { \n");
      out.write("display: block;\n");
      out.write("margin-top: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#nav{\n");
      out.write("border-top: 1px solid lightgray;\n");
      out.write("border-bottom: 1px solid lightgray;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#nav * {\n");
      out.write("font-family: \"InfinitySans-RegularA1\";\n");
      out.write("text-align: center;\n");
      out.write("vertical-align: middle;\n");
      out.write("border: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#nav a {\n");
      out.write("width: 10rem;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#nav li {\n");
      out.write("width: 10%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".nav-link {\n");
      out.write("color: #3a3847;\n");
      out.write("width: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".nav-link:hover {\n");
      out.write("color: #ffce54;\n");
      out.write("border: none;\n");
      out.write("border-bottom: 3px solid !important;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".dropdown-menu {\n");
      out.write("border-top: 5px solid transparent !important;\n");
      out.write("width: 10rem;\n");
      out.write("background-color: rgb(250, 250, 250);\n");
      out.write("box-shadow: 0 10px 10px lightgrey;\n");
      out.write("padding-bottom: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".dropdown-item {\n");
      out.write("font-size: small;\n");
      out.write("margin-top: 10px;\n");
      out.write("background-color: transparent;\n");
      out.write("opacity: 0.7;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".dropdown-item:hover {\n");
      out.write("background-color: #ffce54;\n");
      out.write("color: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#userNameArea{\n");
      out.write("\tborder: none !important;\n");
      out.write("\tcolor: #3a3847 !important;\n");
      out.write("}\n");
      out.write("  </style>\n");
      out.write("  \n");
      out.write("  <!--------------------------------- sweet alert ---------------------------------------- -->\n");
      out.write("  <script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\n");
      out.write("  \n");
      out.write("  <script>\n");
      out.write("  ");

 	 String status = (String)(request.getSession().getAttribute("status"));
 	 String msg = (String)(request.getSession().getAttribute("msg"));
 	 String text = (String)(request.getSession().getAttribute("text"));
  
      out.write("\n");
      out.write("  \n");
      out.write("  ");
 if(msg != null){
      out.write("\n");
      out.write("\t\t \t swal({\n");
      out.write("\t\t \t\t icon : \"");
      out.print(status);
      out.write("\", \n");
      out.write("\t\t \t\t title : \"");
      out.print(msg);
      out.write("\",\n");
      out.write("\t\t \t\t text : \"");
      out.print(text != null ? text : "" );
      out.write("\" \n");
      out.write("\t\t \t });\n");
      out.write(" \t ");

 	 		session.removeAttribute("msg");
 	 		session.removeAttribute("status");
 	 		session.removeAttribute("text");
  	}
 	 
      out.write("\n");
      out.write("  \n");
      out.write("  </script>\n");
      out.write("  \n");
      out.write("<body>\n");
      out.write("  <header>\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("      <!--  ------------ header ------------ -->\n");
      out.write("      <div class=\"row\" id=\"header\">\n");
      out.write("        <div class=\"col-md-4\">\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-4\">\n");
      out.write("          <a href=\"");
      out.print(request.getContextPath());
      out.write("\">\n");
      out.write("            <img src=\"");
      out.print(request.getContextPath());
      out.write("/resources/img/logo_main.png\" width=\"200px\" class=\"mx-auto d-block\" id=\"main-logo\">\n");
      out.write("          </a>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-4\">\n");
      out.write("          <button type=\"button\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/user/signUpAssign1.do'\">회원가입</button>\n");
      out.write("          \n");
      out.write("          ");
 if(loginUser == null) {
      out.write("\n");
      out.write("          \t <button type=\"button\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/userLogin/loginForm.do'\">로그인</button>\n");
      out.write("          ");
 } else{ 
      out.write("\n");
      out.write("          \t <button type=\"button\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/userLogin/logout.do'\">로그아웃</button>\n");
      out.write("          \t <button type=\"button\" id=\"userNameArea\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/myPage/changeUserForm.do'\">");
      out.print(loginUser.getUserName() );
      out.write(" 님</button>\n");
      out.write("          \t \n");
      out.write("          ");
 } 
      out.write("\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!--  ------------ nav ------------ -->\n");
      out.write("    <div class=\"row\" id=\"nav\">\n");
      out.write("      <div class=\"col-md-12\">\n");
      out.write("        <ul class=\"nav nav-tabs justify-content-center\" id=\"nav-wrapper\">\n");
      out.write("          <li class=\"nav-item dropdown\">\n");
      out.write("            <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/user/introduce.do\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">구성원 소개</a>\n");
      out.write("          </li>\n");
      out.write("          <li class=\"nav-item dropdown\">\n");
      out.write("            <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/information/list.do?type=2&category=1\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">정보</a>\n");
      out.write("          </li>\n");
      out.write("          <li class=\"nav-item dropdown\">\n");
      out.write("            <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/qna/list.do\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">커뮤니티</a>\n");
      out.write("            <div class=\"dropdown-menu\">\n");
      out.write("              <a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath() );
      out.write("/notice/list.do\">공지사항</a>\n");
      out.write("              <a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/qna/list.do\">Q&A</a>\n");
      out.write("              <a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/community/list.do\">자유 게시판</a>\n");
      out.write("              <a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/review/review.do?type=6\">사용 후기</a>\n");
      out.write("            </div>\n");
      out.write("          </li>\n");
      out.write("          <li class=\"nav-item dropdown\">\n");
      out.write("            <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/event/eventList.do?type=1\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">이벤트</a>\n");
      out.write("            <div class=\"dropdown-menu\">\n");
      out.write("              <a class=\"dropdown-item\"  href=\"");
      out.print(request.getContextPath());
      out.write("/event/eventList.do?type=1\">진행중인 이벤트</a>\n");
      out.write("              <a class=\"dropdown-item\"  href=\"");
      out.print(request.getContextPath());
      out.write("/event/pastList.do?type=2\">종료된 이벤트</a>\n");
      out.write("              <a class=\"dropdown-item\"  href=\"");
      out.print(request.getContextPath());
      out.write("/event/winnerList.do?type=2\">이벤트 당첨자</a>\n");
      out.write("            </div>\n");
      out.write("          </li>\n");
      out.write("          <li class=\"nav-item dropdown\">\n");
      out.write("          \t ");
 if(loginUser != null && loginUser.getUserId().equals("master")){ 
      out.write("\n");
      out.write("          \t \n");
      out.write("          \t\t<a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/masterPage/userAuthList.do\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">관리자 페이지</a>\n");
      out.write("            \n");
      out.write("\t\t\t\t\t\t");
 }else { 
      out.write("\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("            <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/myPage/changeUserForm.do\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">마이페이지</a>\n");
      out.write("            <div class=\"dropdown-menu\">\n");
      out.write("              <a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/myPage/changeUserForm.do\">회원정보 수정</a>\n");
      out.write("              <a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/myPage/changePwdForm.do\">비밀번호 수정</a>\n");
      out.write("              <a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/myPage/secessionForm.do\">회원 탈퇴</a>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("          </li>\n");
      out.write("        </ul>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </header>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  <script>\n");
      out.write("    $(function () {\n");
      out.write("      $(\".nav-link\").on(\"mouseenter\", function () {\n");
      out.write("        var idx = $(this).index(\".nav-link\");\n");
      out.write("\n");
      out.write("        $(\".nav-link\").each(function (index, item) {\n");
      out.write("          if (index == idx) {\n");
      out.write("            $(item)\n");
      out.write("              .css(\"color\", \"#ffce54\")\n");
      out.write("              .css(\"border-bottom\", \"3px solid #ffce54\");\n");
      out.write("          } else {\n");
      out.write("            $(item).css(\"color\", \"#3a3847\").css(\"border-bottom\", \"none\");\n");
      out.write("          }\n");
      out.write("        });\n");
      out.write("      });\n");
      out.write("\n");
      out.write("      $(\"#nav\").on(\"mouseleave\", function () {\n");
      out.write("        $(\".nav-link\")\n");
      out.write("          .css(\"color\", \"#3a3847\")\n");
      out.write("          .css(\"border-bottom\", \"3px solid transparent\");\n");
      out.write("      });\n");
      out.write("    });\n");
      out.write("  </script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"\n");
      out.write("    integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\n");
      out.write("    crossorigin=\"anonymous\"></script>\n");
      out.write("  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"\n");
      out.write("    integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\"\n");
      out.write("    crossorigin=\"anonymous\"></script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<div class=\"empty\"></div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h3>글쓰기</h3>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/review/updateReviewForm.do?type=");
      out.print(type);
      out.write("&cp=");
      out.print(cp);
      out.write("&no=");
      out.print(review.getReviewBoardNo());
      out.write("\" method=\"post\"\r\n");
      out.write("\t\t\t enctype=\"multipart/form-data\" role=\"form\" onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"exampleFormControlInput1\">제목</label> \r\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"제목을 작성해주세요.\" value=\"");
      out.print(review.getReviewTitle());
      out.write("\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"exampleFormControlInput1\">작성자</label> \r\n");
      out.write("\t\t\t\t<span class=\"writer-area\">");
      out.print(loginUser.getUserName());
      out.write("님</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label for=\"exampleFormControlInput1\">작성날짜</label> \r\n");
      out.write("\t\t\t\t<span class=\"my-0\" id=\"today\" ></span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"exampleFormControlInput1\">카테고리</label> <br>\r\n");
      out.write("\t\t\t\t<select class=\"custom-select\" id=\"category\" name=\"category\" style=\"width: 150px;\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"1\">병원</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"2\">사료</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"3\">간식</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"4\">용품</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t<label>평가</label><br>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t        <div class=\"make_star\">\r\n");
      out.write("\t\t            <div class=\"rating\" >\r\n");
      out.write("\t\t                <i class=\"fas fa-star\"></i>\r\n");
      out.write("\t\t                <i class=\"fas fa-star\"></i>\r\n");
      out.write("\t\t                <i class=\"fas fa-star\"></i>\r\n");
      out.write("\t\t                <i class=\"fas fa-star\"></i>\r\n");
      out.write("\t\t                <i class=\"fas fa-star\"></i>\r\n");
      out.write("\t\t            </div>\r\n");
      out.write("\t\t        </div>\r\n");
      out.write("\t\t        \r\n");
      out.write("\t\t        <!-- 숨긴 star -->\r\n");
      out.write("\t\t        <input type=\"hidden\" id=\"rating-hidden\" name=\"rating\" data-rate=\"");
      out.print(review.getReviewRating() );
      out.write("\">\r\n");
      out.write("\t\t        <input type=\"hidden\" id=\"forwardRating\" name=\"forwardRating\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<label>이미지</label>\r\n");
      out.write("\t\t\t<!-- 이미지 업로드 부분 -->\r\n");
      out.write("\t\t\t<div class=\"form-inline mb-2\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"mr-2 boardImg\" id=\"contentImgArea1\">\r\n");
      out.write("\t\t\t\t\t<img id=\"contentImg1\" width=\"100\" height=\"100\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"mr-2 boardImg\" id=\"contentImgArea2\">\r\n");
      out.write("\t\t\t\t\t<img id=\"contentImg2\" width=\"100\" height=\"100\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"mr-2 boardImg\" id=\"contentImgArea3\">\r\n");
      out.write("\t\t\t\t\t<img id=\"contentImg3\" width=\"100\" height=\"100\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<label for=\"exampleFormControlTextarea1\">내용</label>\r\n");
      out.write("\t\t\t<textarea class=\"form-control\" id=\"content\" name=\"content\" rows=\"10\" style=\"resize: none;\">");
      out.print(review.getReviewContent() );
      out.write("</textarea>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"btn btn-secondary\">목록으로</button>\r\n");
      out.write("\t\t\t&nbsp;\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-info\">등록하기</button>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 숨긴 input태그 -->\r\n");
      out.write("\t\t<div id=\"fileArea\">\r\n");
      out.write("\t\t\t<!--  multiple 속성\r\n");
      out.write("\t\t\t\t- input 요소 하나에 둘 이상의 값을 입력할 수 있음을 명시 (파일 여러개 선택 가능)\r\n");
      out.write("\t\t\t -->\r\n");
      out.write("\t\t\t<input type=\"file\" id=\"img1\" name=\"img1\" onchange=\"LoadImg(this,1)\">\r\n");
      out.write("\t\t\t<input type=\"file\" id=\"img2\" name=\"img2\" onchange=\"LoadImg(this,2)\">\r\n");
      out.write("\t\t\t<input type=\"file\" id=\"img3\" name=\"img3\" onchange=\"LoadImg(this,3)\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// 오늘 날짜 출력 \r\n");
      out.write("\t\tvar today = new Date();\r\n");
      out.write("\t\tvar month = (today.getMonth()+1);\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar str = today.getFullYear() + \"-\"\r\n");
      out.write("\t\t\t\t+ (month < 10 ? \"0\"+month : month) + \"-\"\r\n");
      out.write("\t\t\t\t+ today.getDate();\r\n");
      out.write("\t\t$(\"#today\").html(str);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 유효성 검사 \r\n");
      out.write("\t\tfunction validate() {\r\n");
      out.write("\t\t\tif ($(\"#title\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\talert(\"제목을 입력해 주세요.\");\r\n");
      out.write("\t\t\t\t$(\"#title\").focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ($(\"#content\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\talert(\"내용을 입력해 주세요.\");\r\n");
      out.write("\t\t\t\t$(\"#content\").focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 카테고리 초기값 지정 option(6개)=배열(반복접근) index=순서인덱스, item=현재 접근중인 요소\r\n");
      out.write("\t\t$(\"#category > option\").each(function(index, item){\r\n");
      out.write("\t\t\tif($(item).val() == \"");
      out.print(review.getReviewCategory());
      out.write("\"){\r\n");
      out.write("\t\t\t\t$(item).prop(\"selected\",\"true\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 이미지 배치\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
 
				String src = null;
				if(fList != null){
				for(Attachment at : fList){																	// 현재접근한 변경이름
					src = request.getContextPath()+"/resources/uploadImages/"+at.getFileChangeName();
			
      out.write("\r\n");
      out.write("\t\t\t\t\tvar imgId;\r\n");
      out.write("\t\t\t\t\tswitch (");
      out.print(at.getFileLevel());
      out.write(") {\r\n");
      out.write("\t\t\t\t    case 0: imgId = \"#contentImg1\"; break;\r\n");
      out.write("\t\t\t\t    case 1: imgId = \"#contentImg2\"; break;\r\n");
      out.write("\t\t\t\t    case 2: imgId = \"#contentImg3\"; break;\r\n");
      out.write("\t\t\t \t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(imgId != undefined){\r\n");
      out.write("\t\t\t\t\t\t$(imgId).attr(\"src\", \"");
      out.print(src);
      out.write("\")\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t");
 } }
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 페이지 열자마자 실행되는 함수\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t$(\"#fileArea\").hide();\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#contentImgArea1\").click(function() {\r\n");
      out.write("\t\t\t\t$(\"#img1\").click();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#contentImgArea2\").click(function() {\r\n");
      out.write("\t\t\t\t$(\"#img2\").click();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#contentImgArea3\").click(function() {\r\n");
      out.write("\t\t\t\t$(\"#img3\").click();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t  $(\".boardImg\").on(\"click\",function(){\r\n");
      out.write("\t\t    \t  var index =  $(this).children(\"img\").prop(\"id\") + 1;\r\n");
      out.write("\t\t        console.log(index);\r\n");
      out.write("\t\t        $(\"#img\" + index).click();\r\n");
      out.write("\t\t      });\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t \r\n");
      out.write("\t    // 각각의 영역에 파일을 첨부 했을 경우 미리 보기가 가능하도록 하는 함수\r\n");
      out.write("\t    function LoadImg(value, num) {\r\n");
      out.write("\t      if (value.files && value.files[0]) {\r\n");
      out.write("\t    \t  // value.files : 현재 요소에 파일이 업로드 되어 있는가? -> T/F\r\n");
      out.write("\t    \t\t// value.files[0] : mutiple 속성 사용으로 인해 여러 파일이 업로드 되었을 때 첫 번째 파일이 존재하는가? \r\n");
      out.write("\t        \r\n");
      out.write("    \t\tvar reader = new FileReader();\r\n");
      out.write("\t        // 자바스크립트 FileReader\r\n");
      out.write("        \t// 웹 애플리케이션이 비동기적으로 데이터를 읽기 위하여 읽을 파일을 가리키는 File 혹은 Blob객체를 이용해 파일의 내용을 읽고 사용자의 컴퓨터에 저장하는 것을 가능하게 해주는 객체\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("        \t// FileReader.onload\r\n");
      out.write("\t\t\t// load 이벤트의 핸들러. 이 이벤트는 읽기 동작이 성공적으로 완료 되었을 때마다 발생합니다.\r\n");
      out.write("\t        reader.onload = function (e) { // e :다 읽은 것\r\n");
      out.write("\t        \t//console.log(e.target.result);\r\n");
      out.write("\t        \t// e.target.result\r\n");
      out.write("\t        \t// -> 파일 읽기 동작을 성공한 객체에(fileTag) 올라간 결과(이미지 또는 파일)\r\n");
      out.write("\t        \t\r\n");
      out.write("\t          switch (num) {\r\n");
      out.write("\t          // num은 input태그에서 두번째 매개변수임.\r\n");
      out.write("\t            case 1:\r\n");
      out.write("\t              $(\"#contentImg1\").attr(\"src\", e.target.result);\r\n");
      out.write("\t              break;\r\n");
      out.write("\t            case 2:\r\n");
      out.write("\t              $(\"#contentImg2\").attr(\"src\", e.target.result);\r\n");
      out.write("\t              break;\r\n");
      out.write("\t            case 3:\r\n");
      out.write("\t              $(\"#contentImg3\").attr(\"src\", e.target.result);\r\n");
      out.write("\t              break;\r\n");
      out.write("\t          }\r\n");
      out.write("\t        }\r\n");
      out.write("\r\n");
      out.write("\t        reader.readAsDataURL(value.files[0]);\r\n");
      out.write("\t      }\r\n");
      out.write("\t    }\r\n");
      out.write("\t\t\r\n");
      out.write("\t    // 가져온 별을 체크해야함...    \r\n");
      out.write("\t    $(function(){\r\n");
      out.write("\t    \tvar targetScore = $(\"#rating-hidden\").attr('data-rate');\r\n");
      out.write("\t    \t// console.log(targetScore);\r\n");
      out.write("\t    \t$(this).find('svg:nth-child(-n+' + targetScore +')').css({color:'#FFD600'})\r\n");
      out.write("\t    });\r\n");
      out.write("\t    \r\n");
      out.write("\t    // 별점용 -> 체크시 값 이동\r\n");
      out.write("\t    $(function(){\r\n");
      out.write("\t\t    $('.make_star svg').click(function(){\r\n");
      out.write("\t\t        var targetNum = $(this).index()+1;\r\n");
      out.write("\t\t        $('.make_star svg').css({color:'#000'});\r\n");
      out.write("\t\t        $('.make_star svg:nth-child(-n+' + targetNum +')').css({color:'#F05522'});\r\n");
      out.write("\t\t        console.log(targetNum);\r\n");
      out.write("\t\t        \r\n");
      out.write("\t\t      \t$(\"#forwardRating\").val(targetNum);\r\n");
      out.write("\t\t    })\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("    \r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
